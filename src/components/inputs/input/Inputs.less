.size-small {
    .setTextSize(@font-size-xs, @font-size-sm);
}

.size-normal {
    .setTextSize(@font-size-sm, @font-size-rg);
}

.size-large {
    .setTextSize(@font-size-rg, @font-size-lg);
}

.size-xlarge {
    .setTextSize(@font-size-lg, @font-size-xl);
}

.size-small .InputField { 
    height: 35px;
}

.size-normal .InputField { 
    height: 40px;
}

.size-large .InputField { 
    height: 45px;
}

.size-xlarge .InputField { 
    height: 50px;
}

.error-message {
    margin-top: @margin-sm;
    color: @danger-060;
}

.LabelWrapper, .InputBox, .InputGroup {
    &.disabled, &:disabled{
        *, *:after, *:before {
            color: @font-disabled !important;
        } 
    }
}

// Inputs
.InputBox {
    & > .InputWrap {
        width: 100%;
        position: relative;

        &.invalid-input {
            & > input, & > input:active, & > input:focus,
            & > select, & > select:active, & > select:focus {
                outline-color: @danger-060;
            }

            &:after {
                content: "\f06a";
                position: absolute;
                width: @margin-xl;
                right: 0;
                color: @danger-060;

                display: flex;
                flex-direction: row;
                align-items: center;
                justify-content: center;
            }
        }

        & > input,
        & > select {
            width: 100%;
            height: 100%;

            margin: 0;
            padding: 0 @margin-xl 0 @margin-rg;
            border: none;
            border-bottom: 1px solid @grey-050;
            outline: 2px solid transparent;
            outline-offset: -2px;
            letter-spacing: 0.16px;
        
            color: @grey-100;
            background-color: @grey-010;
            transition: background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),
                outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
        
            &:disabled {
                cursor: not-allowed;
                outline-color: transparent !important;
                border-bottom: 1px solid transparent !important;
            }
    
            &:focus,
            &:active {
                outline-color: @primary-060;
            }
        }

        & > input[type="color"] {
            border: 1px solid @black;
            cursor: pointer;
            padding: 0;
            min-width: 60px;

            &:disabled {
                cursor: not-allowed;
                outline-color: @grey-010 !important;
                border: 1px solid @black !important;
                background-color: @grey-010 !important;
            }
        }

        & > input[type="file"] {
            display: none;
        }
    }
    
    .SingleSelect {
        cursor: pointer;
        background-color: @grey-010;
        transition: background-color 70ms cubic-bezier(0.2, 0, 0.38, 0.9),
                outline 70ms cubic-bezier(0.2, 0, 0.38, 0.9);
        
        & > select {
            z-index: 2;
            background-color: transparent;
        }
    }

    .SingleSelect:after {
        z-index: 1;
        content: '\f0d7';
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        right: 0;
        width: @margin-xl;
    }
}

// TextArea
.InputBox {
    & > div {
        width: 100%;
        position: relative;
    }

    textarea {
        padding: @margin-rg;
        padding-bottom: @margin-lg;
        width: 100%;
        min-width: 50px;
        min-height: 60px;
        font-size: inherit;
        background-color: @grey-010;

        &:disabled {
            cursor: not-allowed;
            outline-color: transparent !important;
        }
      
        &:focus,
        &:active {
            outline-color: @primary-060;
        }
    }

    .invalid-input {
        & > textarea, & > textarea:active, & > textarea:focus {
            outline-color: @danger-060;
        }
    }

    .CharCount {
        color: @font-disabled;
        position: absolute;
        bottom: @margin-sm;
        right: @margin-rg
    }
}

// Input group
.InputGroup {
    .GroupWrapper {
        align-items: flex-start;

        &.HLayout {
            .OptionWrapper {
                &:not(:last-child) {
                    margin: 0;
                    margin-right: @margin-sm;
                }
            }
        }

        &.VLayout {
            .OptionWrapper {
                &:not(:last-child) {
                    margin: 0;
                    margin-bottom: @margin-sm;
                }
            }
        }

        .OptionWrapper {
            & > input[type="radio"] {
                left: 0;
                width: 0;
                height: 0;
                opacity: 0;
                position: absolute;

                + label {
                    cursor: pointer;
                    align-items: baseline;

                    .RadioSelector {
                        content: " ";
                        border-radius: 100%;
                        margin: 0 @margin-sm;
                        border: 1px solid @black;
                        position: relative;
                    }
                }

                &:focus + label .RadioSelector {
                    box-shadow: 0 0 0 1px @primary-060;
                }

                &:disabled + label {
                    cursor: not-allowed;
                    color: @font-disabled !important;

                    .RadioSelector {
                        border-color: @font-disabled !important;
                        
                        &:before {
                            background-color: @font-disabled !important;
                        }
                    }
                }

                &:checked + label .RadioSelector:before {
                    content: " ";
                    border-radius: 100%;
                    background-color: @black;

                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translateX(-50%) translateY(-50%);
                }
            }

            & > input[type="checkbox"] {
                left: 0;
                width: 0;
                height: 0;
                opacity: 0;
                position: absolute;

                + label {
                    cursor: pointer;

                    .CheckboxSelector {
                        content: " ";
                        margin: 0 @margin-sm;
                        border: 1px solid @black;
                    }
                }

                &:focus + label .CheckboxSelector {
                    box-shadow: 0 0 0 2px @primary-060;
                }

                &:disabled + label {
                    cursor: not-allowed;
                    color: @font-disabled !important;

                    .CheckboxSelector {
                        border-color: @font-disabled !important;
                    }
                }

                &:checked:disabled + label .CheckboxSelector {
                    background-color: @font-disabled !important;
                    
                    &:before {
                        color: @white !important;
                    }
                }

                &:checked + label .CheckboxSelector {
                    background-color: @black;
                    color: @white;
                }

                &:checked + label .CheckboxSelector:before {
                    content: "\f00c";
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
            }
        }
    }
}

// mixin functions
.setTextSize(@text-sm, @text-rg) {
  .error-message {
    font-size: @text-sm;
    line-height: @text-rg;
  } 
  
  .RadioSelector,
  .CheckboxSelector {
    width: @text-rg;
    min-width: @text-rg;
    height: @text-rg;
    min-height: @text-rg;
  }
  
  .RadioSelector:before {
    width: calc(@text-rg / 2);
    min-width: calc(@text-rg / 2);
    height: calc(@text-rg / 2);
    min-height: calc(@text-rg / 2);
  }
}
